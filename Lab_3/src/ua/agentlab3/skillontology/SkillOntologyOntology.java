// file: SkillOntologyOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ua.agentlab3.skillontology;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: SkillOntologyOntology.java
 * @author OntologyBeanGenerator v4.1
 * @version 2015/06/10, 23:36:36
 */
public class SkillOntologyOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = -1750159446835811867L;

  //NAME
  public static final String ONTOLOGY_NAME = "SkillOntology";
  // The singleton instance of this ontology
  private static Ontology theInstance = new SkillOntologyOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String DISTRIBUTED_OBJECT_TECHNOLOGY="Distributed_object_technology";
    public static final String CAD_CAM="CAD_CAM";
    public static final String SOCIAL_SKILL="Social_Skill";
    public static final String SKILL_CERTIFIED="Certified";
    public static final String SKILL_WEIGTH="weigth";
    public static final String SKILL_NAME="Name";
    public static final String SKILL_DESCRIPTION="Description";
    public static final String SKILL="Skill";
    public static final String DEVELOPMENT_MANAGEMENT_MODEL="Development_Management_model";
    public static final String SPECIFIC_APPLICATION_DEVELOPMENT="Specific_application_development";
    public static final String OPERATING_SYSTEM="Operating_System";
    public static final String WEB_RELATED="Web_related";
    public static final String DB_INDEPENDENT_PROGRAMMING_LANGUAGE="DB_independent_programming_language";
    public static final String TECHNICAL_SKILL="Technical_Skill";
    public static final String OPERATIONAL_RESPONSIBILITY_COMPUTING="Operational_responsibility_computing";
    public static final String MICROSOFT_CERTIFICATE="Microsoft_Certificate";
    public static final String SERVICE_DOCUMENTATION_COMPUTING="Service_documentation_computing";
    public static final String IBM_OPERATING_SYSTEM="IBM_Operating_System";
    public static final String OTHER_SKILL="Other_Skill";
    public static final String DMM_AND_SW_ING_PRACTICES="DMM_and_Sw_Ing_practices";
    public static final String ORGANISATIONAL_SKILL="Organisational_Skill";
    public static final String OFFICE_SUITE_APPLICATION="Office_Suite_Application";
    public static final String CRM_CUSTOMER_RELATIONSHIP_MANAGEMENT="CRM_Customer_Relationship_Management";
    public static final String COMPUTER_TECHNOLOGY_SPECIALIZATION_ENGINEER="Computer_technology_specialization_engineer";
    public static final String NETWORK_ADMINISTRATION="Network_administration";
    public static final String DATABASE_RELATED="DataBase_related";
    public static final String ORACLE_CERTIFICATE="Oracle_Certificate";
    public static final String PROJECT_MANAGEMENT_EXPERIENCE="Project_management_experience";
    public static final String ACCOUNTING_APPLICATION="Accounting_Application";
    public static final String NOVELL_CERTIFICATE="Novell_Certificate";
    public static final String A__CERTIFICATE="A__Certificate";
    public static final String ICT_SKILL="ICT_Skill";
    public static final String USER_SUPPORT="User_Support";
    public static final String PROGRAMMING_TOOL="Programming_Tool";
    public static final String LOTUS_CERTIFICATE="Lotus_Certificate";
    public static final String UNIX_OPERATING_SYSTEM="UNIX_operating_system";
    public static final String NETWORK_OPERATING_SYSTEM="Network_Operating_System";
    public static final String SPECIFIC_APPLICATION="Specific_Application";
    public static final String DB_RELATED_PROGRAMMING_LANGUAGE="DB_related_programming_language";
    public static final String COMPONENTS_TECNOLOGY_OR_LIBRARY="Components_tecnology_or_library";
    public static final String STAFF_RESPONSIBILITY="Staff_responsibility";
    public static final String SUN_CERTIFICATE="Sun_Certificate";
    public static final String SURVEILLANCE="Surveillance";
    public static final String PROGRAMMING_LANGUAGE="Programming_Language";
    public static final String SECURITY="Security";
    public static final String DATABASE_ADMINISTRATION="DataBase_administration";
    public static final String APPLICATIONS_PROGRAMMING="Applications_programming";
    public static final String WINDOWS_OPERATING_SYSTEM="Windows_Operating_System";
    public static final String COMMUNICATION_PROTOCOL="Communication_protocol";
    public static final String DATABASE_DEVELOPMENT="DataBase_development";
    public static final String IBM_CERTIFICATE="IBM_Certificate";
    public static final String NEGOTIATING_EXPERIENCE="Negotiating_experience";
    public static final String APPLE_CERTIFICATE="Apple_Certificate";
    public static final String ARTISTIC_SKILL="Artistic_Skill";
    public static final String WEB_SERVER="Web_server";
    public static final String SYSTEM_DEVELOPMENT="System_development";
    public static final String BUDGET_RESPONSIBILITY="Budget_responsibility";
    public static final String INSTALLATION_AND_MAINTENANCE="Installation_and_maintenance";
    public static final String CISCO_CERTIFICATE="CISCO_Certificate";
    public static final String VULNERABILITY_ANALYSIS="Vulnerability_Analysis";
    public static final String DATABASE_DESIGN="DataBase_design";
    public static final String SYSTEMS_TASK="Systems_Task";
    public static final String CERTIFICATE="Certificate";
    public static final String COMPONENTS_TECHNOLOGY_OR_LIBRARY="Components_technology_or_library";
    public static final String APPLE_OPERATING_SYSTEM="Apple_Operating_System";
    public static final String NETWORK_RELATED="Network_related";
    public static final String LIBRARY="Library";
    public static final String OO_PRACTICES="OO_practices";
    public static final String PROGRAMMING_DISCIPLINE="Programming_discipline";
    public static final String COM_COMPETENCE="Com_Competence";
    public static final String SUPERVISOR_EXPERIENCE="Supervisor_experience";

  /**
   * Constructor
  */
  private SkillOntologyOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema supervisor_experienceSchema = new ConceptSchema(SUPERVISOR_EXPERIENCE);
    add(supervisor_experienceSchema, ua.agentlab3.skillontology.Supervisor_experience.class);
    ConceptSchema com_CompetenceSchema = new ConceptSchema(COM_COMPETENCE);
    add(com_CompetenceSchema, ua.agentlab3.skillontology.Com_Competence.class);
    ConceptSchema programming_disciplineSchema = new ConceptSchema(PROGRAMMING_DISCIPLINE);
    add(programming_disciplineSchema, ua.agentlab3.skillontology.Programming_discipline.class);
    ConceptSchema oO_practicesSchema = new ConceptSchema(OO_PRACTICES);
    add(oO_practicesSchema, ua.agentlab3.skillontology.OO_practices.class);
    ConceptSchema librarySchema = new ConceptSchema(LIBRARY);
    add(librarySchema, ua.agentlab3.skillontology.Library.class);
    ConceptSchema network_relatedSchema = new ConceptSchema(NETWORK_RELATED);
    add(network_relatedSchema, ua.agentlab3.skillontology.Network_related.class);
    ConceptSchema apple_Operating_SystemSchema = new ConceptSchema(APPLE_OPERATING_SYSTEM);
    add(apple_Operating_SystemSchema, ua.agentlab3.skillontology.Apple_Operating_System.class);
    ConceptSchema components_technology_or_librarySchema = new ConceptSchema(COMPONENTS_TECHNOLOGY_OR_LIBRARY);
    add(components_technology_or_librarySchema, ua.agentlab3.skillontology.Components_technology_or_library.class);
    ConceptSchema certificateSchema = new ConceptSchema(CERTIFICATE);
    add(certificateSchema, ua.agentlab3.skillontology.Certificate.class);
    ConceptSchema systems_TaskSchema = new ConceptSchema(SYSTEMS_TASK);
    add(systems_TaskSchema, ua.agentlab3.skillontology.Systems_Task.class);
    ConceptSchema dataBase_designSchema = new ConceptSchema(DATABASE_DESIGN);
    add(dataBase_designSchema, ua.agentlab3.skillontology.DataBase_design.class);
    ConceptSchema vulnerability_AnalysisSchema = new ConceptSchema(VULNERABILITY_ANALYSIS);
    add(vulnerability_AnalysisSchema, ua.agentlab3.skillontology.Vulnerability_Analysis.class);
    ConceptSchema ciscO_CertificateSchema = new ConceptSchema(CISCO_CERTIFICATE);
    add(ciscO_CertificateSchema, ua.agentlab3.skillontology.CISCO_Certificate.class);
    ConceptSchema installation_and_maintenanceSchema = new ConceptSchema(INSTALLATION_AND_MAINTENANCE);
    add(installation_and_maintenanceSchema, ua.agentlab3.skillontology.Installation_and_maintenance.class);
    ConceptSchema budget_responsibilitySchema = new ConceptSchema(BUDGET_RESPONSIBILITY);
    add(budget_responsibilitySchema, ua.agentlab3.skillontology.Budget_responsibility.class);
    ConceptSchema system_developmentSchema = new ConceptSchema(SYSTEM_DEVELOPMENT);
    add(system_developmentSchema, ua.agentlab3.skillontology.System_development.class);
    ConceptSchema web_serverSchema = new ConceptSchema(WEB_SERVER);
    add(web_serverSchema, ua.agentlab3.skillontology.Web_server.class);
    ConceptSchema artistic_SkillSchema = new ConceptSchema(ARTISTIC_SKILL);
    add(artistic_SkillSchema, ua.agentlab3.skillontology.Artistic_Skill.class);
    ConceptSchema apple_CertificateSchema = new ConceptSchema(APPLE_CERTIFICATE);
    add(apple_CertificateSchema, ua.agentlab3.skillontology.Apple_Certificate.class);
    ConceptSchema negotiating_experienceSchema = new ConceptSchema(NEGOTIATING_EXPERIENCE);
    add(negotiating_experienceSchema, ua.agentlab3.skillontology.Negotiating_experience.class);
    ConceptSchema ibM_CertificateSchema = new ConceptSchema(IBM_CERTIFICATE);
    add(ibM_CertificateSchema, ua.agentlab3.skillontology.IBM_Certificate.class);
    ConceptSchema dataBase_developmentSchema = new ConceptSchema(DATABASE_DEVELOPMENT);
    add(dataBase_developmentSchema, ua.agentlab3.skillontology.DataBase_development.class);
    ConceptSchema communication_protocolSchema = new ConceptSchema(COMMUNICATION_PROTOCOL);
    add(communication_protocolSchema, ua.agentlab3.skillontology.Communication_protocol.class);
    ConceptSchema windows_Operating_SystemSchema = new ConceptSchema(WINDOWS_OPERATING_SYSTEM);
    add(windows_Operating_SystemSchema, ua.agentlab3.skillontology.Windows_Operating_System.class);
    ConceptSchema applications_programmingSchema = new ConceptSchema(APPLICATIONS_PROGRAMMING);
    add(applications_programmingSchema, ua.agentlab3.skillontology.Applications_programming.class);
    ConceptSchema dataBase_administrationSchema = new ConceptSchema(DATABASE_ADMINISTRATION);
    add(dataBase_administrationSchema, ua.agentlab3.skillontology.DataBase_administration.class);
    ConceptSchema securitySchema = new ConceptSchema(SECURITY);
    add(securitySchema, ua.agentlab3.skillontology.Security.class);
    ConceptSchema programming_LanguageSchema = new ConceptSchema(PROGRAMMING_LANGUAGE);
    add(programming_LanguageSchema, ua.agentlab3.skillontology.Programming_Language.class);
    ConceptSchema surveillanceSchema = new ConceptSchema(SURVEILLANCE);
    add(surveillanceSchema, ua.agentlab3.skillontology.Surveillance.class);
    ConceptSchema sun_CertificateSchema = new ConceptSchema(SUN_CERTIFICATE);
    add(sun_CertificateSchema, ua.agentlab3.skillontology.Sun_Certificate.class);
    ConceptSchema staff_responsibilitySchema = new ConceptSchema(STAFF_RESPONSIBILITY);
    add(staff_responsibilitySchema, ua.agentlab3.skillontology.Staff_responsibility.class);
    ConceptSchema components_tecnology_or_librarySchema = new ConceptSchema(COMPONENTS_TECNOLOGY_OR_LIBRARY);
    add(components_tecnology_or_librarySchema, ua.agentlab3.skillontology.Components_tecnology_or_library.class);
    ConceptSchema dB_related_programming_languageSchema = new ConceptSchema(DB_RELATED_PROGRAMMING_LANGUAGE);
    add(dB_related_programming_languageSchema, ua.agentlab3.skillontology.DB_related_programming_language.class);
    ConceptSchema specific_ApplicationSchema = new ConceptSchema(SPECIFIC_APPLICATION);
    add(specific_ApplicationSchema, ua.agentlab3.skillontology.Specific_Application.class);
    ConceptSchema network_Operating_SystemSchema = new ConceptSchema(NETWORK_OPERATING_SYSTEM);
    add(network_Operating_SystemSchema, ua.agentlab3.skillontology.Network_Operating_System.class);
    ConceptSchema uniX_operating_systemSchema = new ConceptSchema(UNIX_OPERATING_SYSTEM);
    add(uniX_operating_systemSchema, ua.agentlab3.skillontology.UNIX_operating_system.class);
    ConceptSchema lotus_CertificateSchema = new ConceptSchema(LOTUS_CERTIFICATE);
    add(lotus_CertificateSchema, ua.agentlab3.skillontology.Lotus_Certificate.class);
    ConceptSchema programming_ToolSchema = new ConceptSchema(PROGRAMMING_TOOL);
    add(programming_ToolSchema, ua.agentlab3.skillontology.Programming_Tool.class);
    ConceptSchema user_SupportSchema = new ConceptSchema(USER_SUPPORT);
    add(user_SupportSchema, ua.agentlab3.skillontology.User_Support.class);
    ConceptSchema icT_SkillSchema = new ConceptSchema(ICT_SKILL);
    add(icT_SkillSchema, ua.agentlab3.skillontology.ICT_Skill.class);
    ConceptSchema a__CertificateSchema = new ConceptSchema(A__CERTIFICATE);
    add(a__CertificateSchema, ua.agentlab3.skillontology.A__Certificate.class);
    ConceptSchema novell_CertificateSchema = new ConceptSchema(NOVELL_CERTIFICATE);
    add(novell_CertificateSchema, ua.agentlab3.skillontology.Novell_Certificate.class);
    ConceptSchema accounting_ApplicationSchema = new ConceptSchema(ACCOUNTING_APPLICATION);
    add(accounting_ApplicationSchema, ua.agentlab3.skillontology.Accounting_Application.class);
    ConceptSchema project_management_experienceSchema = new ConceptSchema(PROJECT_MANAGEMENT_EXPERIENCE);
    add(project_management_experienceSchema, ua.agentlab3.skillontology.Project_management_experience.class);
    ConceptSchema oracle_CertificateSchema = new ConceptSchema(ORACLE_CERTIFICATE);
    add(oracle_CertificateSchema, ua.agentlab3.skillontology.Oracle_Certificate.class);
    ConceptSchema dataBase_relatedSchema = new ConceptSchema(DATABASE_RELATED);
    add(dataBase_relatedSchema, ua.agentlab3.skillontology.DataBase_related.class);
    ConceptSchema network_administrationSchema = new ConceptSchema(NETWORK_ADMINISTRATION);
    add(network_administrationSchema, ua.agentlab3.skillontology.Network_administration.class);
    ConceptSchema computer_technology_specialization_engineerSchema = new ConceptSchema(COMPUTER_TECHNOLOGY_SPECIALIZATION_ENGINEER);
    add(computer_technology_specialization_engineerSchema, ua.agentlab3.skillontology.Computer_technology_specialization_engineer.class);
    ConceptSchema crM_Customer_Relationship_ManagementSchema = new ConceptSchema(CRM_CUSTOMER_RELATIONSHIP_MANAGEMENT);
    add(crM_Customer_Relationship_ManagementSchema, ua.agentlab3.skillontology.CRM_Customer_Relationship_Management.class);
    ConceptSchema office_Suite_ApplicationSchema = new ConceptSchema(OFFICE_SUITE_APPLICATION);
    add(office_Suite_ApplicationSchema, ua.agentlab3.skillontology.Office_Suite_Application.class);
    ConceptSchema organisational_SkillSchema = new ConceptSchema(ORGANISATIONAL_SKILL);
    add(organisational_SkillSchema, ua.agentlab3.skillontology.Organisational_Skill.class);
    ConceptSchema dmM_and_Sw_Ing_practicesSchema = new ConceptSchema(DMM_AND_SW_ING_PRACTICES);
    add(dmM_and_Sw_Ing_practicesSchema, ua.agentlab3.skillontology.DMM_and_Sw_Ing_practices.class);
    ConceptSchema other_SkillSchema = new ConceptSchema(OTHER_SKILL);
    add(other_SkillSchema, ua.agentlab3.skillontology.Other_Skill.class);
    ConceptSchema ibM_Operating_SystemSchema = new ConceptSchema(IBM_OPERATING_SYSTEM);
    add(ibM_Operating_SystemSchema, ua.agentlab3.skillontology.IBM_Operating_System.class);
    ConceptSchema service_documentation_computingSchema = new ConceptSchema(SERVICE_DOCUMENTATION_COMPUTING);
    add(service_documentation_computingSchema, ua.agentlab3.skillontology.Service_documentation_computing.class);
    ConceptSchema microsoft_CertificateSchema = new ConceptSchema(MICROSOFT_CERTIFICATE);
    add(microsoft_CertificateSchema, ua.agentlab3.skillontology.Microsoft_Certificate.class);
    ConceptSchema operational_responsibility_computingSchema = new ConceptSchema(OPERATIONAL_RESPONSIBILITY_COMPUTING);
    add(operational_responsibility_computingSchema, ua.agentlab3.skillontology.Operational_responsibility_computing.class);
    ConceptSchema technical_SkillSchema = new ConceptSchema(TECHNICAL_SKILL);
    add(technical_SkillSchema, ua.agentlab3.skillontology.Technical_Skill.class);
    ConceptSchema dB_independent_programming_languageSchema = new ConceptSchema(DB_INDEPENDENT_PROGRAMMING_LANGUAGE);
    add(dB_independent_programming_languageSchema, ua.agentlab3.skillontology.DB_independent_programming_language.class);
    ConceptSchema web_relatedSchema = new ConceptSchema(WEB_RELATED);
    add(web_relatedSchema, ua.agentlab3.skillontology.Web_related.class);
    ConceptSchema operating_SystemSchema = new ConceptSchema(OPERATING_SYSTEM);
    add(operating_SystemSchema, ua.agentlab3.skillontology.Operating_System.class);
    ConceptSchema specific_application_developmentSchema = new ConceptSchema(SPECIFIC_APPLICATION_DEVELOPMENT);
    add(specific_application_developmentSchema, ua.agentlab3.skillontology.Specific_application_development.class);
    ConceptSchema development_Management_modelSchema = new ConceptSchema(DEVELOPMENT_MANAGEMENT_MODEL);
    add(development_Management_modelSchema, ua.agentlab3.skillontology.Development_Management_model.class);
    ConceptSchema skillSchema = new ConceptSchema(SKILL);
    add(skillSchema, ua.agentlab3.skillontology.Skill.class);
    ConceptSchema social_SkillSchema = new ConceptSchema(SOCIAL_SKILL);
    add(social_SkillSchema, ua.agentlab3.skillontology.Social_Skill.class);
    ConceptSchema caD_camSchema = new ConceptSchema(CAD_CAM);
    add(caD_camSchema, ua.agentlab3.skillontology.CAD_CAM.class);
    ConceptSchema distributed_object_technologySchema = new ConceptSchema(DISTRIBUTED_OBJECT_TECHNOLOGY);
    add(distributed_object_technologySchema, ua.agentlab3.skillontology.Distributed_object_technology.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    skillSchema.add(SKILL_DESCRIPTION, (TermSchema)getSchema(BasicOntology.STRING), 0, ObjectSchema.UNLIMITED);
    skillSchema.add(SKILL_NAME, (TermSchema)getSchema(BasicOntology.STRING), 0, ObjectSchema.UNLIMITED);
    skillSchema.add(SKILL_WEIGTH, (TermSchema)getSchema(BasicOntology.INTEGER), 0, ObjectSchema.UNLIMITED);
    skillSchema.add(SKILL_CERTIFIED, (TermSchema)getSchema(BasicOntology.BOOLEAN), 0, ObjectSchema.UNLIMITED);

    // adding name mappings

    // adding inheritance
    supervisor_experienceSchema.addSuperSchema(organisational_SkillSchema);
    programming_disciplineSchema.addSuperSchema(applications_programmingSchema);
    oO_practicesSchema.addSuperSchema(dmM_and_Sw_Ing_practicesSchema);
    librarySchema.addSuperSchema(components_tecnology_or_librarySchema);
    network_relatedSchema.addSuperSchema(icT_SkillSchema);
    apple_Operating_SystemSchema.addSuperSchema(operating_SystemSchema);
    components_technology_or_librarySchema.addSuperSchema(applications_programmingSchema);
    certificateSchema.addSuperSchema(icT_SkillSchema);
    systems_TaskSchema.addSuperSchema(dmM_and_Sw_Ing_practicesSchema);
    dataBase_designSchema.addSuperSchema(dataBase_relatedSchema);
    vulnerability_AnalysisSchema.addSuperSchema(dmM_and_Sw_Ing_practicesSchema);
    vulnerability_AnalysisSchema.addSuperSchema(network_relatedSchema);
    ciscO_CertificateSchema.addSuperSchema(certificateSchema);
    ciscO_CertificateSchema.addSuperSchema(network_relatedSchema);
    installation_and_maintenanceSchema.addSuperSchema(icT_SkillSchema);
    budget_responsibilitySchema.addSuperSchema(organisational_SkillSchema);
    system_developmentSchema.addSuperSchema(specific_application_developmentSchema);
    web_serverSchema.addSuperSchema(web_relatedSchema);
    artistic_SkillSchema.addSuperSchema(skillSchema);
    apple_CertificateSchema.addSuperSchema(certificateSchema);
    negotiating_experienceSchema.addSuperSchema(organisational_SkillSchema);
    ibM_CertificateSchema.addSuperSchema(certificateSchema);
    dataBase_developmentSchema.addSuperSchema(dataBase_relatedSchema);
    communication_protocolSchema.addSuperSchema(network_relatedSchema);
    windows_Operating_SystemSchema.addSuperSchema(operating_SystemSchema);
    applications_programmingSchema.addSuperSchema(icT_SkillSchema);
    dataBase_administrationSchema.addSuperSchema(dataBase_relatedSchema);
    securitySchema.addSuperSchema(icT_SkillSchema);
    programming_LanguageSchema.addSuperSchema(applications_programmingSchema);
    surveillanceSchema.addSuperSchema(icT_SkillSchema);
    sun_CertificateSchema.addSuperSchema(certificateSchema);
    staff_responsibilitySchema.addSuperSchema(organisational_SkillSchema);
    dB_related_programming_languageSchema.addSuperSchema(dataBase_relatedSchema);
    dB_related_programming_languageSchema.addSuperSchema(programming_LanguageSchema);
    specific_ApplicationSchema.addSuperSchema(icT_SkillSchema);
    network_Operating_SystemSchema.addSuperSchema(operating_SystemSchema);
    uniX_operating_systemSchema.addSuperSchema(operating_SystemSchema);
    lotus_CertificateSchema.addSuperSchema(certificateSchema);
    programming_ToolSchema.addSuperSchema(applications_programmingSchema);
    user_SupportSchema.addSuperSchema(icT_SkillSchema);
    icT_SkillSchema.addSuperSchema(skillSchema);
    a__CertificateSchema.addSuperSchema(certificateSchema);
    novell_CertificateSchema.addSuperSchema(certificateSchema);
    novell_CertificateSchema.addSuperSchema(network_relatedSchema);
    accounting_ApplicationSchema.addSuperSchema(specific_ApplicationSchema);
    project_management_experienceSchema.addSuperSchema(organisational_SkillSchema);
    oracle_CertificateSchema.addSuperSchema(certificateSchema);
    dataBase_relatedSchema.addSuperSchema(icT_SkillSchema);
    network_administrationSchema.addSuperSchema(network_relatedSchema);
    computer_technology_specialization_engineerSchema.addSuperSchema(icT_SkillSchema);
    crM_Customer_Relationship_ManagementSchema.addSuperSchema(organisational_SkillSchema);
    office_Suite_ApplicationSchema.addSuperSchema(specific_ApplicationSchema);
    organisational_SkillSchema.addSuperSchema(skillSchema);
    dmM_and_Sw_Ing_practicesSchema.addSuperSchema(icT_SkillSchema);
    other_SkillSchema.addSuperSchema(skillSchema);
    ibM_Operating_SystemSchema.addSuperSchema(operating_SystemSchema);
    service_documentation_computingSchema.addSuperSchema(icT_SkillSchema);
    microsoft_CertificateSchema.addSuperSchema(certificateSchema);
    operational_responsibility_computingSchema.addSuperSchema(icT_SkillSchema);
    technical_SkillSchema.addSuperSchema(skillSchema);
    dB_independent_programming_languageSchema.addSuperSchema(programming_LanguageSchema);
    web_relatedSchema.addSuperSchema(network_relatedSchema);
    operating_SystemSchema.addSuperSchema(icT_SkillSchema);
    specific_application_developmentSchema.addSuperSchema(icT_SkillSchema);
    development_Management_modelSchema.addSuperSchema(dmM_and_Sw_Ing_practicesSchema);
    skillSchema.addSuperSchema(com_CompetenceSchema);
    social_SkillSchema.addSuperSchema(skillSchema);
    caD_camSchema.addSuperSchema(specific_ApplicationSchema);
    distributed_object_technologySchema.addSuperSchema(components_tecnology_or_librarySchema);

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
